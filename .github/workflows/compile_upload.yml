name: Build, Test, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install Poetry
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          curl -sSL https://install.python-poetry.org | python -
        else
          curl -sSL https://install.python-poetry.org | POETRY_HOME=$HOME/.poetry python -
          export PATH="$HOME/.poetry/bin:$PATH"
        fi
      
    - name: Install dependencies
      run: |
        if [ "${{ runner.os }}" == "Windows" ]; then
          python -m pip install --upgrade pip
        else
          sudo apt-get update
          python -m pip install --upgrade pip
        fi

    - name: Compile
      run: |
        python setup.py bdist_wheel

  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
  
    runs-on: ${{ matrix.os }}
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
  
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'
  
    - name: Install dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip
        python -m pip install poetry
        python -m poetry install
  
    - name: Run tests
      run: |
        # Test commands

  deploy:
    strategy:
      matrix:
        os: [ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel twine setuptools

    - name: Install pybind11
      run: |
        pip install pybind11
        pip install "pybind11[global]"

    - name: Build and upload
      run: |
        python setup.py bdist_wheel
        twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
